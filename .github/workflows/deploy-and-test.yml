name: Deploy to Cloud Run and Test with mabl

on:
  push:
    branches: [ 'develop', 'feature/*', 'hotfix/*' ]
  pull_request:
    branches: [ 'main' ]

jobs:
  deploy-and-test:
    runs-on: ubuntu-latest

    # secretsや定数はjob.envで束ねる（workflow直下envでsecretsは不可）
    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      SERVICE_NAME: todo-e2e
      REGION: asia-northeast1

      # secretsの“有無”をブール文字列化 → step if: はenvを見る
      HAS_GCP_SA_KEY: ${{ secrets.GCP_SA_KEY != '' && 'true' || 'false' }}
      HAS_GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID != '' && 'true' || 'false' }}
      HAS_MABL_API_KEY: ${{ secrets.MABL_API_KEY != '' && 'true' || 'false' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Verify files
        run: |
          echo "Current directory: $(pwd)"
          ls -la
          if [ -f package.json ]; then
            echo "package.json exists"; cat package.json
          else
            echo "package.json not found"; exit 1
          fi

      - name: Install dependencies
        run: npm ci

      - name: Check secrets availability
        run: |
          echo "HAS_GCP_SA_KEY=$HAS_GCP_SA_KEY"
          echo "HAS_GCP_PROJECT_ID=$HAS_GCP_PROJECT_ID"
          echo "HAS_MABL_API_KEY=$HAS_MABL_API_KEY"

      - name: Authenticate to Google Cloud
        if: ${{ env.HAS_GCP_SA_KEY == 'true' }}
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        if: ${{ env.HAS_GCP_SA_KEY == 'true' }}
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker to use gcloud as a credential helper
        if: ${{ env.HAS_GCP_SA_KEY == 'true' }}
        run: gcloud auth configure-docker $REGION-docker.pkg.dev

      - name: Build Docker image
        if: ${{ env.HAS_GCP_SA_KEY == 'true' }}
        run: |
          docker build -t $REGION-docker.pkg.dev/$PROJECT_ID/$SERVICE_NAME-repo/$SERVICE_NAME:$GITHUB_SHA .
          docker tag  $REGION-docker.pkg.dev/$PROJECT_ID/$SERVICE_NAME-repo/$SERVICE_NAME:$GITHUB_SHA \
                      $REGION-docker.pkg.dev/$PROJECT_ID/$SERVICE_NAME-repo/$SERVICE_NAME:latest

      - name: Push Docker image
        if: ${{ env.HAS_GCP_SA_KEY == 'true' }}
        run: |
          docker push $REGION-docker.pkg.dev/$PROJECT_ID/$SERVICE_NAME-repo/$SERVICE_NAME:$GITHUB_SHA
          docker push $REGION-docker.pkg.dev/$PROJECT_ID/$SERVICE_NAME-repo/$SERVICE_NAME:latest

      - name: Deploy to Cloud Run
        if: ${{ env.HAS_GCP_SA_KEY == 'true' }}
        run: |
          gcloud run deploy $SERVICE_NAME \
            --image $REGION-docker.pkg.dev/$PROJECT_ID/$SERVICE_NAME-repo/$SERVICE_NAME:$GITHUB_SHA \
            --platform managed \
            --region $REGION \
            --allow-unauthenticated \
            --port 8080 \
            --memory 512Mi \
            --cpu 1 \
            --min-instances 0 \
            --max-instances 10

      - name: Get Cloud Run URL
        if: ${{ env.HAS_GCP_SA_KEY == 'true' }}
        id: get-url
        run: |
          SERVICE_URL=$(gcloud run services describe $SERVICE_NAME --platform managed --region $REGION --format 'value(status.url)')
          echo "SERVICE_URL=$SERVICE_URL" >> $GITHUB_OUTPUT
          echo "Deployed service URL: $SERVICE_URL"

      - name: Wait for service to be ready
        if: ${{ env.HAS_GCP_SA_KEY == 'true' }}
        run: |
          echo "Waiting for service to be ready..."
          sleep 30
          curl -f ${{ steps.get-url.outputs.SERVICE_URL }} || exit 1

      - name: Run mabl tests
        if: ${{ env.HAS_GCP_SA_KEY == 'true' && env.HAS_MABL_API_KEY == 'true' }}
        id: mabl-test-deployment
        uses: mablhq/github-run-tests-action@v1
        env:
          MABL_API_KEY: ${{ secrets.MABL_API_KEY }}   # 実値はここでだけ使用
        with:
          application-id: ${{ vars.MABL_APPLICATION_ID }}
          environment-id: ${{ vars.MABL_ENVIRONMENT_ID }}
          app-url: ${{ steps.get-url.outputs.SERVICE_URL }}
          plan-labels: ${{ vars.MABL_PLAN_LABELS }}
          continue-on-failure: false

      - name: Check test results
        run: |
          echo "mabl tests completed"
          echo "Deployment ID: ${{ steps.mabl-test-deployment.outputs.mabl-deployment-id }}"
          echo "Plans run: ${{ steps.mabl-test-deployment.outputs.plans_run }}"
          echo "Plans passed: ${{ steps.mabl-test-deployment.outputs.plans_passed }}"
          echo "Plans failed: ${{ steps.mabl-test-deployment.outputs.plans_failed }}"
          echo "Tests run: ${{ steps.mabl-test-deployment.outputs.tests_run }}"
          echo "Tests passed: ${{ steps.mabl-test-deployment.outputs.tests_passed }}"
          echo "Tests failed: ${{ steps.mabl-test-deployment.outputs.tests_failed }}"
