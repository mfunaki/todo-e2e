name: Deploy to Cloud Run and Test with mabl

on:
  push:
    branches: [ 'develop', 'feature/*', 'hotfix/*' ]
  pull_request:
    branches: [ 'main' ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: todo-e2e
  REGION: asia-northeast1

jobs:
  deploy-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Verify files
      run: |
        echo "Current directory: $(pwd)"
        echo "Files in directory:"
        ls -la
        echo "Checking package.json:"
        if [ -f package.json ]; then
          echo "package.json exists"
          cat package.json
        else
          echo "package.json not found"
          exit 1
        fi

    - name: Install dependencies
      run: npm ci

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker to use gcloud as a credential helper
      run: gcloud auth configure-docker $REGION-docker.pkg.dev

    - name: Build Docker image
      run: |
        docker build -t $REGION-docker.pkg.dev/$PROJECT_ID/$SERVICE_NAME-repo/$SERVICE_NAME:$GITHUB_SHA .
        docker tag $REGION-docker.pkg.dev/$PROJECT_ID/$SERVICE_NAME-repo/$SERVICE_NAME:$GITHUB_SHA $REGION-docker.pkg.dev/$PROJECT_ID/$SERVICE_NAME-repo/$SERVICE_NAME:latest

    - name: Push Docker image
      run: |
        docker push $REGION-docker.pkg.dev/$PROJECT_ID/$SERVICE_NAME-repo/$SERVICE_NAME:$GITHUB_SHA
        docker push $REGION-docker.pkg.dev/$PROJECT_ID/$SERVICE_NAME-repo/$SERVICE_NAME:latest

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy $SERVICE_NAME \
          --image $REGION-docker.pkg.dev/$PROJECT_ID/$SERVICE_NAME-repo/$SERVICE_NAME:$GITHUB_SHA \
          --platform managed \
          --region $REGION \
          --allow-unauthenticated \
          --port 8080 \
          --memory 512Mi \
          --cpu 1 \
          --min-instances 0 \
          --max-instances 10

    - name: Get Cloud Run URL
      id: get-url
      run: |
        SERVICE_URL=$(gcloud run services describe $SERVICE_NAME --platform managed --region $REGION --format 'value(status.url)')
        echo "SERVICE_URL=$SERVICE_URL" >> $GITHUB_OUTPUT
        echo "Deployed service URL: $SERVICE_URL"

    - name: Wait for service to be ready
      run: |
        echo "Waiting for service to be ready..."
        sleep 30
        curl -f ${{ steps.get-url.outputs.SERVICE_URL }} || exit 1

    - name: Run mabl tests
      id: mabl-test-deployment
      uses: mablhq/github-run-tests-action@v1
      env:
        # Use a "CI/CD Integration" type of mabl API key
        MABL_API_KEY: ${{ secrets.MABL_API_KEY }}
      with:
        application-id: ${{ vars.MABL_APPLICATION_ID }}
        environment-id: ${{ vars.MABL_ENVIRONMENT_ID }}
        app-url: ${{ steps.get-url.outputs.SERVICE_URL }}
        plan-labels: ${{ vars.MABL_PLAN_LABELS }}
        # テスト失敗時にワークフローを継続しない
        continue-on-failure: false

    - name: Check test results
      run: |
        echo "mabl tests completed"
        echo "Deployment ID: ${{ steps.mabl-test-deployment.outputs.mabl-deployment-id }}"
        echo "Plans run: ${{ steps.mabl-test-deployment.outputs.plans_run }}"
        echo "Plans passed: ${{ steps.mabl-test-deployment.outputs.plans_passed }}"
        echo "Plans failed: ${{ steps.mabl-test-deployment.outputs.plans_failed }}"
        echo "Tests run: ${{ steps.mabl-test-deployment.outputs.tests_run }}"
        echo "Tests passed: ${{ steps.mabl-test-deployment.outputs.tests_passed }}"
        echo "Tests failed: ${{ steps.mabl-test-deployment.outputs.tests_failed }}"
        echo "If this step runs, it means tests passed successfully"

    - name: Auto-merge to main (if tests pass and not on main branch)
      if: github.ref != 'refs/heads/main' && github.event_name == 'push'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "Tests passed! Auto-merging to main branch..."
        
        # 現在のブランチをmainにマージ
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        git fetch origin main
        git checkout main
        git pull origin main
        git merge origin/${{ github.ref_name }} --no-ff -m "Auto-merge from ${{ github.ref_name }}: Tests passed"
        git push origin main
        
        echo "Successfully merged ${{ github.ref_name }} to main"

    - name: Create Pull Request (if on PR)
      if: github.event_name == 'pull_request' && github.ref != 'refs/heads/main'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "Pull request tests completed successfully"
        echo "Ready for manual review and merge"

    - name: Comment on PR with deployment info
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `🚀 **Deployment successful!**
            
            **Service URL:** ${{ steps.get-url.outputs.SERVICE_URL }}
            **Tests:** ✅ All mabl tests passed
            
            This PR is ready for review and merge.`
          })

    - name: Cleanup on failure
      if: failure()
      run: |
        echo "Deployment or tests failed. Cleaning up..."
        # 必要に応じて、デプロイされたサービスを削除する処理を追加
        # gcloud run services delete $SERVICE_NAME --platform managed --region $REGION --quiet || true
